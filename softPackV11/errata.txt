                      Errata and Typos 
     Java Programming: A Student-Friendly Approach 
                  First Edition
       First Printing (page ii has numbers 10 down to 1)
                    November 13, 2023


If you find errors, please let me know by sending me an email at
dosreist@newpaltz.edu. 

Page 7, end of first line
   Change "n" to "on"

Page 11, line 6
   Change "then plus sign" to "then the plus sign"

Page 70, Figure 7.2
   The default value for an instance variable with type char is 0, 
   not space. Change entry for char to

      char           0

Page 182, Paragraph that starts in the middle of the page.
   Here is a better explanation of the advantage of doubly-linked lists:

     We have been discussing only one type of linked lists, 
     the singly-linked list, which is characterized by a single 
     link field in each node. Each node has only one link 
     which points to its successor node on the list. 
     Another type of linked list is the doubly-linked list 
     in which each node has two links: one that points to 
     the successor node, and one that points to the 
     predecessor node. More overhead and space is required 
     to create and process doubly-linked lists. But 
     doubly-linked lists have some advantages. For example, 
     any node can easily be removed from a doubly-linked list 
     given just a pointer to that node, but not so for a 
     singly-linked list. To remove a node from a singly-linked 
     list requires access to the pointers to the successor 
     and predecessor nodes of the node to be removed (because 
     the link field in the predecessor node has to be modified 
     to point to the successor node). In a doubly-linked list, 
     both pointers--successor and predecessor--yare in the node 
     to be removed. But in a singly-linked list, only the 
     successor pointer is in the node to be removed. 


